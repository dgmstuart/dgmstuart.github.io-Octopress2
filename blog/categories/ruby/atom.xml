<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | dgms code]]></title>
  <link href="http://dgmstuart.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://dgmstuart.github.io/"/>
  <updated>2014-06-24T03:08:53+01:00</updated>
  <id>http://dgmstuart.github.io/</id>
  <author>
    <name><![CDATA[Duncan Stuart]]></name>
    <email><![CDATA[dgmstuart@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Useful Rake Tasks in Rails]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/06/15/useful-rake-tasks-in-rails/"/>
    <updated>2014-06-15T15:55:16+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/06/15/useful-rake-tasks-in-rails</id>
    <content type="html"><![CDATA[<p>When inside any directory with a <a href="https://github.com/jimweirich/rake">Rakefile</a>, you can bring up the list of available rake tasks with <code>rake -T</code></p>

<p>In <a href="http://rubyonrails.org/">Rails</a> projects everyone is used to running rake tasks related to database migration and asset management, but here are some tasks I&rsquo;ve found useful which you might not be aware of:</p>

<ul>
<li><code>rake notes</code> &ndash; Lists all the comments in your application beginning with annotations like <code># TODO</code> and <code># FIXME</code></li>
<li><code>rake log:clear</code> &ndash; Clears out all of your log files (which can tend to get rather large if you&rsquo;re regularly developing and running tests)</li>
<li><code>rake routes</code> &ndash; Prints out all the routes defined by your <code>config/routes.rb</code> file. Very useful for debugging</li>
<li><code>rake tmp:clear</code>/<code>rake tmp:create</code> &ndash; Clear out all your tempfiles (sessions, caches etc.) / create the folders for those tempfiles.</li>
<li><code>rake secret</code> &ndash; &ldquo;Generate a cryptographically secure secret key&rdquo; &ndash; the recommended way to generate the secret token for your applications, but useful anywhere you need a long random key</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matching on a Final Segment of a String]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/06/04/matching-on-a-final-segment-of-a-string/"/>
    <updated>2014-06-04T19:55:14+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/06/04/matching-on-a-final-segment-of-a-string</id>
    <content type="html"><![CDATA[<p>When matching on the final segment of a string, e.g for a file extension, you could use a regular expression:</p>

<p>```ruby</p>

<blockquote><p>&ldquo;foo.bar&rdquo; =~ /.*.bar$/</p>

<h1>=> 0</h1>

<p>&ldquo;foo.bar.baz&rdquo; =~ /.*.bar$/</p>

<h1>=> nil</h1>

<p>```</p></blockquote>

<p>But of course in ruby there&rsquo;s a much more expressive way
```ruby</p>

<blockquote><p>&ldquo;foo.bar&rdquo;.end_with?(&ldquo;.bar&rdquo;)</p>

<h1>=> true</h1>

<p>&ldquo;foo.bar.baz&rdquo;.end_with?(&ldquo;.bar&rdquo;)</p>

<h1>=> false</h1>

<p>```</p></blockquote>

<p>You can even pass multiple suffixes as arguments:
```ruby</p>

<blockquote><p>&ldquo;foo.qux&rdquo;.end_with?(&ldquo;bar&rdquo;, &ldquo;baz&rdquo;, &ldquo;qux&rdquo;)</p>

<h1>=> true</h1>

<p>```</p></blockquote>

<p>Oh Ruby how I love you so.</p>

<p><em><a href="http://www.ruby-doc.org/core-2.1.1/String.html#method-i-end_with-3F">api documentation for end_with?</a></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gotcha: Initialising RSpec in a Rails Project]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/02/10/initialising-rspec-in-a-rails-project/"/>
    <updated>2014-02-10T07:50:09+00:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/02/10/initialising-rspec-in-a-rails-project</id>
    <content type="html"><![CDATA[<p>I use RSpec for doing TDD, and the rspec-rails gem for integration in Rails projects. On initialising RSpec for SOLDN2, with <code>rspec init</code> it generated the following spec helper (comments removed):</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>spec/spec_helper.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="no">RSpec</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">treat_symbols_as_metadata_keys_with_true_values</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">run_all_when_everything_filtered</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">filter_run</span> <span class="ss">:focus</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">order</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">random</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This seemed to be missing some things, notably the loading of the Rails environment. Looking at the readme of the rspec-rails gem, I found that the correct command is actually:</p>

<pre><code>rails generate rspec:install
</code></pre>

<p>The file this command generates is much more verbose with instructive comments:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>spec/spec_helper.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="no">ENV</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">RAILS_ENV</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">]</span> <span class="o">||=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="nb">test</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="nb">require</span> <span class="no">File</span><span class="o">.</span><span class="n">expand_path</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">.</span><span class="o">/.</span><span class="n">.</span><span class="o">/</span><span class="n">config</span><span class="o">/</span><span class="n">environment</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="no">FILE</span><span class="o">&lt;</span><span class="sr">/strong&gt;)</span>
</span><span class='line'><span class="sr">require &amp;lsquo;rspec/</span><span class="n">rails</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">rspec</span><span class="o">/</span><span class="n">autorun</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Dir[Rails.root.join(&amp;ldquo;spec/su</span><span class="n">pport</span><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;*/&lt;</span><span class="sr">/em&gt;.rb&amp;rdquo;)].each { |f| require f }&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span><span class="o">.</span><span class="n">check_pending!</span> <span class="k">if</span> <span class="n">defined?</span><span class="p">(</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migration</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;RSpec.configure do |config|</span>
</span><span class='line'><span class="sr">  config.fixture_path = &amp;ldquo;</span><span class="si">#{</span><span class="o">::</span><span class="no">Rails</span><span class="o">.</span><span class="n">root</span><span class="si">}</span><span class="sr">/s</span><span class="n">pec</span><span class="o">/</span><span class="n">fixtures</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">use_transactional_fixtures</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">infer_base_class_for_anonymous_controllers</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">order</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">random</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Interestingly this leaves out the <code>focus</code> config options, which allow you to select specific specs to run, e.g:</p>

<p><code>ruby
it "does a thing", :focus do
  #...
end
</code></p>
]]></content>
  </entry>
  
</feed>
