<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[dgms code]]></title>
  <link href="http://dgmstuart.github.io/atom.xml" rel="self"/>
  <link href="http://dgmstuart.github.io/"/>
  <updated>2015-03-13T11:52:40+00:00</updated>
  <id>http://dgmstuart.github.io/</id>
  <author>
    <name><![CDATA[Duncan Stuart]]></name>
    <email><![CDATA[dgmstuart@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Saron Yitbarek - Learning Code Good (at BathRuby)]]></title>
    <link href="http://dgmstuart.github.io/blog/2015/03/13/saron-yitbarek-learning-code-good-at-bathruby/"/>
    <updated>2015-03-13T11:27:15+00:00</updated>
    <id>http://dgmstuart.github.io/blog/2015/03/13/saron-yitbarek-learning-code-good-at-bathruby</id>
    <content type="html"><![CDATA[<p><img src="https://pbs.twimg.com/media/B_-Xi25W8AAKFwW.jpg:medium" alt="photo by
@Naiomi_Freeman" /></p>

<p><em>Photo by <a href="https://twitter.com/Naomi_Freeman">@Naiomi_Freeman</a></em></p>

<ul>
<li>Dreyfus model of skill acquisition - LOOK UP</li>
<li>Advice she got for going from novice to expert: &ldquo;Read code&rdquo;</li>
<li>Codeclub: sunday morning reading group</li>
<li>Rules for what to read: Exemplary code: popular, documented, well maintained</li>
<li>Starting point: Sinatra&rsquo;s <code>get</code> method</li>
<li>&ldquo;A huge fan of remote working: Any excuse to not wear pants is great&rdquo; :)</li>
<li>Met on google hangouts</li>
<li>Did a retrospective on the sessions:

<ul>
<li>Decided to pick only small things: &lt; 100 lines of code: gives space to ask
questions, reasearch etc.</li>
</ul>
</li>
<li>Understanding: it&rsquo;s not really about reading the code: it&rsquo;s about the
convesations it starts.</li>
<li>Keeping it small - 5 consistent people - helps to keep it engaged</li>
<li>Important to have a &lsquo;tour guide&rsquo; making sure everyone is engaged and
contributing (?)</li>
<li>Asking the question of crappy methods &ldquo;how would we have written it?&rdquo; is
really interesting.

<ul>
<li>Therefore it&rsquo;s not necessary for the code to be exemplary: lots of benefit
in reading shonky code</li>
</ul>
</li>
<li>Drawing out knowledge gaps: the things you think you understand but actually
have no idea about</li>
<li>Reading something you actually need to use is a totally different
experience: you&rsquo;re much more invested in it</li>
<li>Look at organisation of the code, not just the detail (how code is organised
into files, what they&rsquo;re called etc)</li>
<li>Learning on your own is possible but really tiring.</li>
<li>Learning in a bootcamp is very expensive and time-consuming</li>
<li>Solution: <a href="http://www.codenewbie.org/">codenewbie</a> - connecting new developers with each other</li>
<li>&ldquo;The learning happens in the digressions&rdquo;</li>
<li>Knowledge = connecting the &lsquo;dots&rsquo; of information</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ben Orenstein: Live Coding in the Bath at BathRuby]]></title>
    <link href="http://dgmstuart.github.io/blog/2015/03/13/ben-orenstein-live-coding-in-the-bath-at-bathruby/"/>
    <updated>2015-03-13T10:34:52+00:00</updated>
    <id>http://dgmstuart.github.io/blog/2015/03/13/ben-orenstein-live-coding-in-the-bath-at-bathruby</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2015.bathruby.org/">Bath Ruby 2015</a>, live blogging some of the
talks</em></p>

<ul>
<li>Live coding!</li>
<li>Code for sending mail to a list of recipients based on a csv</li>
<li>Problems:

<ul>
<li>Will fail if one of the recipients fails to get parsed</li>
<li>CSV should get injected as a dependency rather than bring parsed in this
class.</li>
<li>Class has multiple responsibilities: parsing and mailing</li>
</ul>
</li>
<li>TDD: Should take very little time and effort to run tests (his are two
keystrokes and no time)</li>
<li><p>an &lsquo;extract class&rsquo; refactoring:</p>

<ol>
<li>add the class we  want in the initialiser</li>
<li>create an empty spec</li>
<li>create the class</li>
</ol>
</li>
<li><p><code>CSV::strip_heredoc</code> - Look up</p></li>
<li>Don&rsquo;t write specs for private methods - test them implicitly through the
public methods</li>
<li>Spec style for parsing output:

<ol>
<li>create a csv string</li>
<li>create an output hash</li>
<li>expect parsing the csv string to equal the output hash</li>
</ol>
</li>
<li>TDD approach - do only the smalles thing to get the message to change: e.g.
create initializer with no args, then add one arg, then start to define
behaviour</li>
<li>Now actually use the parser.</li>
<li>Tests green = OVERWHELMING INSTINCT TO COMMIT!</li>
<li>&ldquo;Component test&rdquo; = integration test just covering a selection of components
(?)</li>
<li>Test refactoring: extract methods! (e.g. to do repeated stubbing and other
setup)

<ul>
<li>could use <code>before</code>, but tends to do this later or not at all. Makes specs
harder to read and maintain (?): each spec is different. Extracting method is definitely the first
step.</li>
</ul>
</li>
<li>&ldquo;We make a mess first, then we clean it up&rdquo;</li>
<li>Invert control: it&rsquo;s odd that we pass the csv into the Invitations class

<ul>
<li>Instead, &ldquo;build dependencies at higher level and pass it down to lower
levels&rdquo; (??)</li>
<li>Instead of passing the csv to invitations and creating a parser based on
it, let&rsquo;s send invitations to the parser (!)</li>
</ul>
</li>
<li>Inverting control benefits:

<ul>
<li>Easier to follow Open/Closed principle</li>
<li>Shorter specs</li>
</ul>
</li>
<li>Question &ldquo;The specs passed from the beginning, so weren&rsquo;t you done?&rdquo;

<ul>
<li>Answer: Refactoring makes more flexible maintainable code</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bath Ruby: Linda Liukas - Principles of Play]]></title>
    <link href="http://dgmstuart.github.io/blog/2015/03/13/bath-ruby-linda-liukas-principles-of-play/"/>
    <updated>2015-03-13T09:42:26+00:00</updated>
    <id>http://dgmstuart.github.io/blog/2015/03/13/bath-ruby-linda-liukas-principles-of-play</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2015.bathruby.org/">Bath Ruby 2015</a>, live blogging some of the
talks</em></p>

<p><img src="https://pbs.twimg.com/media/B_-CEvAWEAA1Fqu.jpg:large" alt="Photo of Linda Liukas by
@Naomi_Freeman" /></p>

<p><em>photo by <a href="https://twitter.com/naomi_freeman/">@Naomi_Freeman</a></em></p>

<ul>
<li>Railsgirls in over 277(?) cities

<ul>
<li>Started in Helsinki</li>
</ul>
</li>
<li>&ldquo;The most scalable change in the world happens when you&rsquo;re 4 years old&rdquo;</li>
<li>&ldquo;If you draw 1000 circles eventually your circles will get better&rdquo;</li>
<li>Realtity distortion: being in the community allowed her to think &ldquo;Hey I can
write a children&rsquo;s book, even though I don&rsquo;t know how to draw, or write a
book, or program very well</li>
<li>3 principles of learning: Playfulness, Curiosity, Rules</li>
<li>Learning Real-world languages (Finnish) by reading other people&rsquo;s texts, not
by learning grammar rules first</li>
<li>&ldquo;Little girls don&rsquo;t know the are not supposed to like computers&rdquo;</li>
<li>Two joys of programming: 1. Building beautiful elegant proper things 2.
trying things which you&rsquo;re not sure will work and thrilling when it actually
works. This second one is the playfulness (what she&rsquo;s focussing on&#8221;</li>
<li>3 components of learning: Achievement, Social and Immersion. Traditional
learning mainly just focusses on the first</li>
<li>Rules: <em>how</em> do things work. &ldquo;Imposing logic on something otherwise hard to
understand&rdquo;</li>
<li>Teaching through metaphors: baking cupcakes - if you change the recipe
you&rsquo;ll get different cupcakes.</li>
<li>Curiosity: Asking <em>why</em>

<ul>
<li>Introduce 5 year olds to the idea that any object (cars, dogs, toilets)
could have a computer in it</li>
<li>Opening up to asking questions: &ldquo;what <em>happens</em> when I press play&rdquo;, &ldquo;is
the internet a place&rdquo; - these sort of questions which many adults don&rsquo;t
really
ask</li>
<li>Making computers out of paper - totally open thinking: this button prints
out lego - that button makes breakfast.</li>
</ul>
</li>
<li>__why&rsquo;s poignant guide etc. - opens up to this idea that people in
programming can be whimsical, human - not what an initial picture of
programming might be like</li>
<li>Programmers have found the loophole: we are the world-builders: making
something out of nothing using just words: Programming as Storytelling</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up a Ruby Dev Environment on Bowery.io]]></title>
    <link href="http://dgmstuart.github.io/blog/2015/02/28/setting-up-a-ruby-on-rails-dev-environment-on-bowery-dot-io/"/>
    <updated>2015-02-28T01:27:44+00:00</updated>
    <id>http://dgmstuart.github.io/blog/2015/02/28/setting-up-a-ruby-on-rails-dev-environment-on-bowery-dot-io</id>
    <content type="html"><![CDATA[<p><em>EDIT: Apparently it&rsquo;s not possible to run docker inside a Bowery instance
because Bowery uses docker and docker has a hard time running inside a docker
container - see <a href="https://groups.google.com/forum/#!topic/bowery/WsXWzWghwVc">this post on the forum</a></em></p>

<p><a href="http://bowery.io/">Bowery.io</a> is a hosted development environment service.
The idea is that you edit your files locally, but run your code in a cloud-hosted
<a href="https://www.docker.com/">Docker</a> container, based on an image which can be
shared and edited by teams.</p>

<p>It looks like it used to host its own packages and allow environments to be
set up through a gui, but now the approach is to either install everything by
hand or use a dockerfile, which I guess makes sense as docker has become more
and more popular and Bowery&rsquo;s main audience is going to be quite devvy devs
who are comfortable using docker.</p>

<p>I had a go at setting up an environment for ruby development and didn&rsquo;t really
find any documentation so here&rsquo;s what I tried:</p>

<h2>Approach: Use a dockerfile</h2>

<p>The simplest way to start your Bowery image with ruby is to use a dockerfile
which sets ruby up for you. This can be as simple as creating a file called
<code>Dockerfile</code> at the root of your project, consisting of this line:</p>

<pre><code>from ruby:2.2.0
</code></pre>

<p>&hellip;then when you select your code directory for the first time through the
Bowery app you can click &ldquo;Yes&rdquo; on this prompt to initialize your Bowery image
based on that Dockerfile:</p>

<p><img src="http://dgmstuart.github.io/images/content/bowery_prompt.png"></p>

<p>More details about this approach can be found <a href="http://bowery.io/posts/dockerfile-support/">on the Bowery blog</a></p>

<h2>Approach: Install ruby directly</h2>

<p>Not having ever used docker in anger, my first attempt involved just
installing ruby manually. The following steps are
basically a textbook set of steps for installing ruby on a new Ubuntu machine
(which is what Bowery instances are based on):</p>

<ol>
<li><p>Update apt-get:</p>

<pre><code> apt-get update
</code></pre></li>
<li><p><a href="https://github.com/sstephenson/ruby-build/wiki#suggested-build-environment">Install the dependencies for ruby-build</a>
using apt-get</p></li>
<li><p><a href="https://github.com/sstephenson/rbenv">Install rbenv</a></p></li>
<li><p><a href="https://github.com/sstephenson/ruby-build">Install ruby-build</a></p></li>
<li><p>Install ruby with rbenv:</p>

<pre><code> rbenv install 2.2.0
 rbenv global 2.2.0
</code></pre></li>
<li><p>Install bundler:</p>

<pre><code> gem install bundler
</code></pre></li>
</ol>


<h2>What about Rails?</h2>

<p>I <em>have</em> managed to successfully set up a Rails dev environment using Bowery,
but it ended up being pretty fiddly and I&rsquo;m not sure I have anything coherent
enough to blog about.</p>

<p>I essentially set it up just like any other ubuntu box would be set up (but
I&rsquo;m still pretty green at server management - hence fiddly).</p>

<p>What I was hoping
to find was a Dockerfile which at least set up Ruby and Postgres, but it seems
like the normal approach is to run separate Docker containers and link them
(as in <a href="http://allenwei.cn/setup-rails-development-environment-with-docker/">this tutorial</a>).
I don&rsquo;t think this approach applies to Bowery, where a single dockerfile is
used to initialize the image. I suppose I could run docker on Bowery though? (#meta)</p>

<p>In any case, here are the additional components which need to be installed to
run my Rails dev environment:</p>

<ul>
<li>A Javascript runtime (I installed Node.js with apt-get)</li>
<li>A database (I installed Postgresql with apt-get but had a pain setting it up)</li>
<li>A headless browser for javascript specs (I <a href="http://phantomjs.org/build.html">built phantom.js from
scratch</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Your Base PATH Gets Generated in OSX]]></title>
    <link href="http://dgmstuart.github.io/blog/2015/02/23/how-your-base-path-gets-generated-in-osx/"/>
    <updated>2015-02-23T23:03:33+00:00</updated>
    <id>http://dgmstuart.github.io/blog/2015/02/23/how-your-base-path-gets-generated-in-osx</id>
    <content type="html"><![CDATA[<p>On OSX and linux it seems to be fairly common practice to totally define the <code>PATH</code> in a
<code>.profile</code> or <code>.bashrc</code> file. This gives total control over the order in which
various locations are searched through. Here&rsquo;s the line from <a href="https://github.com/dgmstuart/dotfiles/blob/master/.profile">my .profile</a>:</p>

<pre><code>export PATH=~/bin:/usr/local/bin:/usr/bin:/usr/sbin:/bin:/sbin
</code></pre>

<p>However, your <code>PATH</code> isn&rsquo;t just set through <code>profile</code> and <code>rc</code> files: if you
don&rsquo;t build your path from scratch and you only ever append or prepend to it
with statements like <code>export PATH=$PATH:some/other/stuff</code> then the OS helpfully
sets your base <code>PATH</code> to something sensible.</p>

<p>It does this based on various files in <code>/etc</code> (at least on OSX):</p>

<h2><code>/etc/paths</code></h2>

<p>This contains the list of the various binary directories which make up the core of your path:</p>

<pre><code>/usr/local/bin
/usr/bin
/bin
/usr/sbin
/sbin
</code></pre>

<h2><code>/etc/paths.d</code></h2>

<p>This contains a number of files which contain paths for various applications,
again with one path element per line. I believe these are added to the <em>end</em> of
the <code>PATH</code>. Mine includes a <code>git</code> file:</p>

<pre><code>/usr/local/git/bin
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Not Break Permalinks in WordPress]]></title>
    <link href="http://dgmstuart.github.io/blog/2015/02/06/how-to-not-break-permalinks-in-wordpress/"/>
    <updated>2015-02-06T00:13:40+00:00</updated>
    <id>http://dgmstuart.github.io/blog/2015/02/06/how-to-not-break-permalinks-in-wordpress</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve written a blog post for <a href="https://www.dxw.com/">work</a> about how much you can and can&rsquo;t mess around with urls in WordPress before old links stop working. It boils down to 5 rules:</p>

<ol>
<li>Editing Post slugs doesn’t break old links</li>
<li>Editing Post url structure (the permalinks) doesn’t break old links</li>
<li>Changing both the permalink structure and the slug will break old links</li>
<li>Editing the parent/child relationships of pages doesn’t break old links</li>
<li>Editing the slugs of pages will break old links</li>
</ol>


<p>For more details read the full post on the dxw blog: <a href="https://www.dxw.com/2015/02/keeping-traffic-flowing-to-your-wordpress-site-after-a-big-restructuring/">Keeping traffic flowing to your WordPress site after a big restructuring</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Managing Identity in Git]]></title>
    <link href="http://dgmstuart.github.io/blog/2015/02/04/managing-identity-in-git/"/>
    <updated>2015-02-04T00:17:21+00:00</updated>
    <id>http://dgmstuart.github.io/blog/2015/02/04/managing-identity-in-git</id>
    <content type="html"><![CDATA[<p>When using git, your commits are labelled with your name and email address.
These are usually based on the <code>user.name</code> and <code>user.email</code> fields in a global <code>.gitconfig</code> file in your home directory,
ensuring that these values are always available.</p>

<p>There might be some circumstances under which these need to vary. For example, on public projects for work I like to use my work email rather than my personal one.
There are a couple of ways to achieve this:</p>

<h3>1. As an argument to the commit:</h3>

<pre><code>git commit user.email duncan@work.com
</code></pre>

<p>This is useful for one-off commits but would be tedious to type every time.</p>

<h3>2. In a local git config</h3>

<pre><code>git config user.email duncan@work.com
</code></pre>

<p>This creates a local <code>.gitconfig</code> file. Useful in project directories - since all child directories will use settings in this file,
or will fall back to the global settings if a setting isn&rsquo;t present in this file.</p>

<h3>3. In an environment variable</h3>

<pre><code>export AUTHOR_EMAIL=duncan@work.com
export COMMITTER_EMAIL=duncan@work.com
</code></pre>

<p>These override everything - any email setting in any <code>.gitconfig</code> file.
Useful if like me you like to <a href="https://github.com/dgmstuart/dotfiles">manage your dotfiles in git</a>
and share them on github in order to easily copy settings between different computers.</p>

<p>These could be set in a local <code>.profile</code> file to make every project on that computer use a different email to your main one, while keeping the <code>.gitconfig</code> file pristine.
<em>To understand the difference between Author and Committer see <a href="https://stackoverflow.com/questions/18750808/difference-between-author-and-committer-in-git/18754896#18754896">this StackOverflow post</a></em></p>

<h2>Bonus: What if you don&rsquo;t set anything?</h2>

<p>It turns out git will try it&rsquo;s best to find a name and email address to associate with your commits even if you don&rsquo;t tell it explicitly what these are.
Here&rsquo;s where it looks, in order, for an email address to use:</p>

<ol>
<li>An <code>EMAIL</code> local variable</li>
<li>Your system username <code>@</code> the value in <code>/etc/mailname</code> (which only exists on Debian systems?)</li>
<li>Your system username <code>@</code> the fully qualified hostname of the computer</li>
</ol>


<p>For more information check out the <a href="http://git-scm.com/docs/git-commit-tree.html">git documentation on the topic</a></p>

<p><em>Thanks to <a href="https://twitter.com/holizz">@holizz</a> for helping me understand all this</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pivotal Talk: Data-informed Product Decisions]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/10/22/pivotal-talk-data-driven-product-decisions/"/>
    <updated>2014-10-22T12:48:38+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/10/22/pivotal-talk-data-driven-product-decisions</id>
    <content type="html"><![CDATA[<p><a href="http://www.meetup.com/Pivotal-Labs-Tech-Talks/events/213571202/">http://www.meetup.com/Pivotal-Labs-Tech-Talks/events/213571202/</a></p>

<p>Marc Abraham. <a href="http://www.slideshare.net/abrahammarc1/102214-pivotal-labs-tech-talk">Slides</a></p>

<ul>
<li>First thing is to ask the right questions</li>
<li>Book - Lean Analytics</li>
<li>Articulate Assumptions about the benefits of your product,</li>
<li>Define Hypothesis: how will we know (in terms of hard metrics) if our assumptions are validated? What does success look like?</li>
<li>To start with, focus on one key metric</li>
<li>Behavioural plan - what do you want users to do - both to achieve user needs and business needs</li>
<li><p>You have a live product:</p>

<ul>
<li>Is it meeting the hypothesis</li>
</ul>
</li>
<li><p>Product retrospectives: how are we doing with the product - what does the data tell us about how well it&rsquo;s going?</p></li>
<li><p>Data-Driven vs Data Informed approaches</p>

<ul>
<li>Data Driven:

<ul>
<li>Focus on one metric - collect lots of data (A/B, Multivariate tests etc. and understand whether what you&rsquo;re doing is impacting that metric)</li>
</ul>
</li>
</ul>
</li>
<li><p>Data Informed</p>

<ul>
<li>Data might not tell you whether it&rsquo;s a good product idea full stop: might be a leap of faith

<ul>
<li>When you actually have an MVP, <em>then</em> you can start gathering data</li>
</ul>
</li>
<li>Plurality is the key: data is often just one aspect in data decisions</li>
<li>Talk - Adam Osiri (?) on Facebook&rsquo;s data-informed approach</li>
<li>Data is important, bit other factors come into play: resources, competition, regulation, brand.</li>
<li>You can&rsquo;t replace intuition or creative ideas with data</li>
</ul>
</li>
<li><p>5 key points:</p>

<ol>
<li>Focus on the right questions</li>
<li>Data can&rsquo;t replace intuition</li>
<li>Listen to the data and act accordingly

<ul>
<li>This is hard</li>
<li>e.g. data might say that your idea or your variation isn&rsquo;t actually effective.</li>
</ul>
</li>
<li>Build and launch with data in mind

<ul>
<li>Include analytics in the user stories</li>
<li>Start thinking about your assumptions and hypotheses at the beginning of the product life cycle</li>
<li>as soon as you start working on the product you should be working with the analytics team/building data in from the ground up.</li>
</ul>
</li>
<li>Be clear about your hypotheses, sample size and timing.

<ul>
<li>how large a sample do you need before you can claim that your results are significant.</li>
</ul>
</li>
</ol>
</li>
<li><p>Final statement &ldquo;Embrace the data - don&rsquo;t fear it&rdquo;</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCamp Europe 2014 Notes - 2.5: Matt Mullenweg Q&amp;A]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/09/28/wordcamp-europe-2014-notes-2-dot-5-matt-mullenweg-q-and-a/"/>
    <updated>2014-09-28T12:28:13+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/09/28/wordcamp-europe-2014-notes-2-dot-5-matt-mullenweg-q-and-a</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2014.europe.wordcamp.org/">WordCamp Europe</a> in Sofia - taking rough notes on some of the talks</em></p>

<p>Matt Mullenweg, Om Malik <a href="http://2014.europe.wordcamp.org/session/matt-mullenweg/">http://2014.europe.wordcamp.org/session/matt-mullenweg/</a></p>

<p><img src="https://pbs.twimg.com/media/Byng_nfIgAErGt4.jpg" alt="Matt Mullenweg in conversation with Om Malik" /></p>

<h2>In conversation with Om Malik:</h2>

<ul>
<li>Biggest learning in the last 11 years?

<ul>
<li>The community makes it what it is - not the feature set. Lots of other software checks the same boxes that WordPress checks, but it doesn&rsquo;t have what we have in this room</li>
</ul>
</li>
<li>For-profits have a limit in their vision. Non-profits have difficulty making connections with enough/the right people. Working together they can achieve more.</li>
<li>&ldquo;I&rsquo;d rather put things into the world under moral licences than immoral ones&rdquo; - GPL is the &ldquo;Most moral licence&rdquo; that you can put software out under</li>
<li>&ldquo;I&rsquo;d be skeptical of an open source company that kept everyone in the same office&rdquo; - that&rsquo;s missing part of the benefit: Open source works when people are all around the world.</li>
<li>How do we structure WP so that it can adapt to what the trends are over the coming years?

<ul>
<li>more and more access is on closed proprietary devices (iphones etc.)</li>
<li>Wp wasn&rsquo;t designed with touch interaction in mind. WP apps haven&rsquo;t had a ton of community involvement</li>
</ul>
</li>
</ul>


<p><img src="https://pbs.twimg.com/media/BynhzoPIMAAwoDT.jpg" alt="Photo of Matt Mullenweg Q&amp;A by @Joan_Artes on twitter" /></p>

<p><em>Photo by <a href="https://twitter.com/Joan_Artes/status/516191909656920065/photo/1">@Joan_Artes</a></em></p>

<h2>Q&amp;A</h2>

<ul>
<li>What are your thoughts about entrepreneurship in Europe, particularly eastern europe?

<ul>
<li>@om - Local laws in Europe favour local investors over international investors: a challenge for entrepreneurship</li>
<li>&ldquo;The best thing European companies can do is to stop comparing themselves to American companies&rdquo;</li>
</ul>
</li>
<li>CFTP Wheatley: &ldquo;You&rsquo;ve scaled up 1800 people - what do those people actually do&rdquo;

<ul>
<li>Lots on support</li>
<li>Design and development: allows us to contribute much much more to WP Core</li>
<li>&ldquo;I want to scale that as far as it can go&rdquo;</li>
<li>Wants it to be an exemplar of a mixed nonprofit/for profit: prove to the world that it <em>Can</em> be done.</li>
</ul>
</li>
<li>Once we have APIs it will enable a whole new class of application - e.g. front-ends which talk to something which isn&rsquo;t WP but implements the WP API.

<ul>
<li>A Cambrian explosion for WordPress - comparable to when plugins were introduced</li>
</ul>
</li>
<li>&ldquo;We&rsquo;ve found the search in WP isn&rsquo;t very good&rdquo;

<ul>
<li>&ldquo;No it&rsquo;s terrible&rdquo;</li>
<li>If you&rsquo;re serious about search you should use a plugin that indexes your content in lucene or elasticsearch</li>
</ul>
</li>
<li>No plans now or in the future to have paid plugins - or a paid app store.

<ul>
<li>Could make things more discoverable: look at what you&rsquo;ve got installed and suggest things you might find useful</li>
</ul>
</li>
<li>This year there were more non-english downloads than english downloads

<ul>
<li>More translations will be the biggest driver of increases in WP usage</li>
</ul>
</li>
<li>How much should WP businesses be contributing to the WP community?

<ul>
<li>Maybe 5%, so if you have 100 employees, 5 of them could be contributing to core.</li>
</ul>
</li>
<li>Can we get rid of Backwards compatibility

<ul>
<li>I don&rsquo;t buy that we should break backwards compatibility for architectural purity. More inclined to do it for reasons that will mean more people use WP</li>
</ul>
</li>
<li>Lots of plugins aren&rsquo;t maintained - some maintainers may even have died. Can we get these just removed from the directory?

<ul>
<li>Plugins over 2 years old will stop showing up in search results</li>
<li>Plugin search is going to be optimised towards putting the most popular, best supported ones at the top.</li>
<li>Factor in the compatibility between plugins - plugins which work well together</li>
<li>Plugins are the most open area for innovation - it&rsquo;s an open market</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCamp Europe 2014 Notes - 2.4: Code Deodorant]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/09/28/wordcamp-europe-2014-notes-2-dot-4-code-deodorant/"/>
    <updated>2014-09-28T10:27:07+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/09/28/wordcamp-europe-2014-notes-2-dot-4-code-deodorant</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2014.europe.wordcamp.org/">WordCamp Europe</a> in Sofia - taking rough notes on some of the talks</em></p>

<p>Tom Nowell (cftp) <a href="http://2014.europe.wordcamp.org/session/tom-nowell/">http://2014.europe.wordcamp.org/session/tom-nowell/</a></p>

<ul>
<li>Now when running vanilla WP without plugins you shouldn&rsquo;t see any warnings, so all warnings are things you should pay attention to</li>
<li>&lsquo;@&rsquo; swallows errors - hides them.</li>
<li><a href="http://codex.wordpress.org/Plugin_API/Action_Reference/pre_get_posts">pre_get_posts action</a> - useful for removing complexity: modifying queries before they get run</li>
<li>Law of Demeter &ldquo;if you&rsquo;re talking to something, only talk to the things directly adjacent to you&rdquo;</li>
<li>No global variables - random ordering of tests can help to show up issues.</li>
<li>Tools for code quality:

<ul>
<li>php syntax checking - if your editor isn&rsquo;t doing this you&rsquo;re doing it wrong. PHP Storm does this</li>
<li><a href="https://github.com/squizlabs/PHP_CodeSniffer">php code sniffer</a> - give it coding standards - it&rsquo;ll check them</li>
<li><a href="https://github.com/Halleck45/PhpMetrics">php Metrics</a></li>
<li>phpLOC - tells you how many lines, classes, namespaces, measure of code complexity</li>
<li><a href="https://github.com/phpmd/phpmd">php Mess detector</a> - fuzzy matching: helps detect typos and join up e.g. misspelled variables which might be the same thing</li>
<li>NPath &amp; Cyclomatic complexity - Cycl = number of points at which code may diverge, NPath is number of execution paths through the code.

<ul>
<li>NPath complexity is roughly equivalent to the number of unit tests that you need to have to fully test the function</li>
</ul>
</li>
</ul>
</li>
<li>Lots of WP functions have incredibly large npath complexity - WP_Query::get_posts is insanely large. Even larger in WP 4.0

<ul>
<li><a href="http://www.tomjn.com/390/wp_queryget_posts/">http://www.tomjn.com/390/wp_queryget_posts/</a></li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCamp Europe 2014 Notes - 2.3: The Next Generation Hosting Stack]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/09/28/wordcamp-europe-2014-notes-2-dot-3-the-next-generation-hosting-stack/"/>
    <updated>2014-09-28T09:33:02+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/09/28/wordcamp-europe-2014-notes-2-dot-3-the-next-generation-hosting-stack</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2014.europe.wordcamp.org/">WordCamp Europe</a> in Sofia - taking rough notes on some of the talks</em></p>

<p>Mark Jaquith (@markjaquith) <a href="http://2014.europe.wordcamp.org/session/mark-jaquith/">http://2014.europe.wordcamp.org/session/mark-jaquith/</a></p>

<ul>
<li>Why is performance important?

<ul>
<li>It&rsquo;s not about overall speed - it&rsquo;s about the frustration of being interrupted</li>
<li>Everyone hates Lag</li>
</ul>
</li>
<li>WP has a bad rep for speed

<ul>
<li>no matter what wp core do, WP DB&rsquo;s are getting bigger, lots of functionality, lots of plugins</li>
</ul>
</li>
<li>WP is dynamic - everything is built on the fly

<ul>
<li>Why don&rsquo;t we just generate static files? - No persistent caching in core. Pages are so dynamic: search results etc. Only a small number of pages can be cached</li>
</ul>
</li>
<li>For the purposes of this talk: speed = speed of download of just the html page (not css or other assets)</li>
<li>3+ seconds = EMERGENCY</li>
<li>1-3 seconds = Slow</li>
<li>100-250ms = fast</li>
<li>&lt;100ms = instant</li>
<li>Many hosts don&rsquo;t help with static caching</li>
<li>Virtual server hosting - what to look for

<ul>
<li>Are they going to be around for a while?</li>
<li>What&rsquo;s their raw performance - lots of people have done hardcore speed tests - easily googleable</li>
<li>Value for money</li>
<li>Tool support - provisioning scripts, auto backup</li>
<li>Recommended: Linode, Digital Ocean</li>
</ul>
</li>
</ul>


<h2>Web Server</h2>

<ul>
<li>&ldquo;Nginx is the best thing to happen to web servers ever&rdquo;</li>
<li>Apache approach - php is baked in. That means there&rsquo;s an overhead for each request</li>
<li>Nginx approach - can&rsquo;t have php baked in. PHP-FPM runs php</li>
<li>PHP 5.5 has significant performance improvements over previous versions</li>
<li>HHVM - facebook project: transcodes php into machine code on the fly, with caching = crazy fast

<ul>
<li>Might not be production stable - need monitoring to catch when it crashes</li>
</ul>
</li>
</ul>


<h2>Database</h2>

<ul>
<li>MySQL is not the only option: MariaDB, Percona</li>
<li>HyperDB - project for providing a layer to manage lots of database instances</li>
</ul>


<h2>Caching</h2>

<h3>Page caching:</h3>

<ul>
<li>Questions - who, what, how long. Answers: Anonymous???, front of site, minutes, maybe hours???.</li>
<li>Nginx has a cache</li>
<li>Varnish is another option, but is another moving part</li>
<li>Plugins are tightly integrated with WP, but run in php so are much slower</li>
</ul>


<h3>Object caching:</h3>

<ul>
<li>Recommend using Redis (Pantheon uses it)</li>
<li>Memcached - used to be a recommendation. Restarting flushes the data - can cause massive spikes in load</li>
<li>Mark&rsquo;s wrappers:

<ul>
<li>TLC Tranients <a href="http://bitly/tlc-transients">http://bitly/tlc-transients</a></li>
<li>Fragment caching: <a href="http://bitly/fragment-cache">http://bitly/fragment-cache</a></li>
</ul>
</li>
</ul>


<h3>The next generation stack</h3>

<p><img src="https://pbs.twimg.com/media/Bym-26pCcAAyPVd.jpg:large" alt="The next generation WordPress hosting stack" /></p>

<ul>
<li><p>Audience qu Hyper db - works with MariaDB &amp; Percona?</p>

<ul>
<li>AFAIK yes</li>
</ul>
</li>
<li><p>My qu - can you make core use Redis for your object cache or is that just for your own caching</p>

<ul>
<li>Yes - you configure an object cache and core will use it to cache posts, taxonomies, a bunch of other things.</li>
</ul>
</li>
<li><p>Audience qu: What do you use for performance monitoring</p>

<ul>
<li>NewRelic: very expensive, but gives you amazing insights</li>
</ul>
</li>
</ul>


<p>*</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCamp Europe 2014 Notes - 1.8: Usability Testing]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-8-usability-testing/"/>
    <updated>2014-09-27T15:15:07+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-8-usability-testing</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2014.europe.wordcamp.org/">WordCamp Europe</a> in Sofia - taking rough notes on some of the talks</em></p>

<p>Dario Jazbec Hrvatin - <a href="http://2014.europe.wordcamp.org/session/dario-jazbec-hrvatin/">http://2014.europe.wordcamp.org/session/dario-jazbec-hrvatin/</a></p>

<p><img src="http://photos-e.ak.instagram.com/hphotos-ak-xaf1/10665594_1562716813952100_214832350_n.jpg" alt="sketchnotes by @studionetting" /></p>

<p><em>Awesome sketchnotes by <a href="http://instagram.com/p/tc-b8atkPN/">@studionetting</a></em></p>

<ul>
<li>Remote user testing</li>
<li>Google hangouts or Skype

<ul>
<li>Important to make sure that your users are comfortable with the tech before officially starting the test</li>
</ul>
</li>
<li>Beginners or Experts as your users: depends what you&rsquo;re testing</li>
<li><p>Have a 5 minute chat to screen them: make sure that they meet your profile - that they will provide useful data</p></li>
<li><p>Scenarios: Start with the test (specific task that they need to do) then work it up into a scenario</p></li>
<li>Start off with a script</li>
<li>after that - relax them: get them talking by asking some simple questions:

<ul>
<li>&ldquo;what are your favourite themes and plugins&rdquo;</li>
</ul>
</li>
<li>Don&rsquo;t be afraid to just skip a step if they&rsquo;re struggling</li>
<li><p>To close off the session:</p>

<ul>
<li>Ask any addition questions</li>
<li>answer any questions they have</li>
<li>thank them (!!)</li>
</ul>
</li>
<li><p>Throughout: Keep a poker face</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCamp Europe 2014 Notes - 1.7: Interactive Prototyping]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-7-interactive-prototyping/"/>
    <updated>2014-09-27T14:40:38+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-7-interactive-prototyping</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2014.europe.wordcamp.org/">WordCamp Europe</a> in Sofia - taking rough notes on some of the talks</em></p>

<p>Karin Christen <a href="http://2014.europe.wordcamp.org/session/karin-christen/">http://2014.europe.wordcamp.org/session/karin-christen/</a></p>

<p><img src="http://photos-e.ak.instagram.com/hphotos-ak-xaf1/10665594_1562716813952100_214832350_n.jpg" alt="sketchnotes by @studionetting" /></p>

<p><em>Awesome sketchnotes by <a href="http://instagram.com/p/tc-b8atkPN/">@studionetting</a></em></p>

<ul>
<li>Used dynamic style guide - one page in the prototype</li>
<li>Started in the browser right from the beginning - speed benefits but also:

<ul>
<li>responsiveness from the beginning</li>
<li>easy reference for the existing styles</li>
<li>visual specification - communication tool</li>
</ul>
</li>
<li>Prototypes = a basis for a specification for user testing</li>
<li>php doesn&rsquo;t work for dynamic prototypes - just html/css</li>
<li>Made a prototype Generator (in js?)

<ul>
<li>Installs quickly</li>
<li>Dynamic content without php (how??)</li>
<li>Benefit: less noise from php</li>
</ul>
</li>
<li><a href="http://vuejs.org/">http://vuejs.org/</a>

<ul>
<li>Adds attributes which can be added to markup which can e.g. optionally show and hide elements based on url query params</li>
</ul>
</li>
<li><p>Closing comment: &ldquo;The modern prototype is a living playground, not a project milestone&rdquo;</p></li>
<li><p>Audience question - if you&rsquo;re using wp - why don&rsquo;t you just jump into wp? Why go to the effort of generating content in JS?</p>

<ul>
<li>Answer: the project example was for a complex back-end which didn&rsquo;t exist yet. With WP their process is slightly different: start off designing in the browser (test there?), then port over to WP (once it&rsquo;s validated?)</li>
</ul>
</li>
<li><p>My question - how do you deal with responsive elements when you don&rsquo;t know what the context will be: media queries only work with the whole size of the page.</p>

<ul>
<li>Answer: we design in context</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCamp Europe 2014 Notes - 1.5: Postmodern Wordpress]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-5-postmodern-wordpress/"/>
    <updated>2014-09-27T12:32:07+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-5-postmodern-wordpress</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2014.europe.wordcamp.org/">WordCamp Europe</a> in Sofia - taking rough notes on some of the talks</em></p>

<p>Andrew Nacin: <a href="http://2014.europe.wordcamp.org/session/andrew-nacin/">http://2014.europe.wordcamp.org/session/andrew-nacin/</a></p>

<ul>
<li>WP enables non-devs to do dev

<ul>
<li>Low barrier to entry</li>
<li>gateway drug</li>
</ul>
</li>
<li>WP is increasing in complexity

<ul>
<li>Part of it is about migrating functionality into js</li>
</ul>
</li>
<li>The world of web dev is getting more complicated: html5, css3 - (Raises barrier to entry??)</li>
<li>&ldquo;We&rsquo;re really good at managing backwards compatibility&rdquo;</li>
<li>Dev focus is on improving the UX: source of complexity</li>
<li>Improving docs for devs is important - experienced devs forget that it&rsquo;s an issue.</li>
<li>Complexity needs to not come at the cost of the philosophies: trivial setup etc.</li>
<li>&hellip;balanced against drawing the experienced</li>
<li>&ldquo;you know what? I&rsquo;ll build this site in WP, because WP doesn&rsquo;t make me want to tear my hair out any more&rdquo;</li>
<li>WP needs to be more consistent: decrease the time spent searching through docs/trying to work out what an argument means

<ul>
<li>inconsistencies trip people up</li>
<li>struggle - can&rsquo;t break backwards-compatability</li>
</ul>
</li>
<li>Objects should (/will have?) implementations of <a href="http://php.net/manual/en/class.jsonserializable.php">http://php.net/manual/en/class.jsonserializable.php</a></li>
<li>A lot of people don&rsquo;t actually know they&rsquo;re writing php (!)</li>
<li>“ I really can’t wait to have [these features] because it’s, like, <em>Sanity</em> and that’s a good thing to have”</li>
<li>WP uses objects but in a functional way - actually going OO wouldn&rsquo;t make sense (?)</li>
<li><a href="http://backpress.org/">http://backpress.org/</a></li>
<li>WP should only load the necessary files - not 120.</li>
<li>Also you should be able to pull individual files out and use them in non-wp projects.

<ul>
<li>The way you do that is by decoupling -> this also makes debugging easier</li>
</ul>
</li>
<li><p>You shouldn&rsquo;t need to understand what&rsquo;s going on under the hood in WP in order to build stuff which works.</p></li>
<li><p>Audience observation - Automattic - preferred to use REST API to WP function calls (?) because the api is more consistent</p></li>
<li><p>Audience qu - I&rsquo;m missing a debugger</p>

<ul>
<li>Use an IDE. We could be doing more to make debugging easier, but there are a bunch of tools out there which help.</li>
</ul>
</li>
<li><p>Posts might end up with relationships. Terms will probably end up with metadata</p>

<ul>
<li>Post relationships now (via a plugin): <a href="https://wordpress.org/plugins/posts-to-posts/">https://wordpress.org/plugins/posts-to-posts/</a></li>
</ul>
</li>
<li><p>&ldquo;It&rsquo;s not a matter of doing it, it&rsquo;s a matter of planning it out so that we don&rsquo;t have to Re-do it in a year&rdquo;</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCamp Europe 2014 Notes - 1.4: How Come Every Time...]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-4-how-come-every-time-dot-dot-dot/"/>
    <updated>2014-09-27T10:21:08+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-4-how-come-every-time-dot-dot-dot</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2014.europe.wordcamp.org/">WordCamp Europe</a> in Sofia - taking rough notes on some of the talks</em></p>

<h2>How come every time I get stabbed in the back, my fingerprints are on the knife?</h2>

<p>Jenny Beaumont <a href="http://2014.europe.wordcamp.org/session/jenny-beaumont/">http://2014.europe.wordcamp.org/session/jenny-beaumont/</a></p>

<ul>
<li>Your business plan might be fine, but are you prepared for when things go horribly wrong?</li>
<li>When bad things happen we&rsquo;re ultimately responsible</li>
<li>&ldquo;Taking responsibility can be a blessing as well as a burden&rdquo;</li>
<li>&ldquo;It&rsquo;s up to you to not only choose who you work with, but to devise communicate and enforce the rules of your profession&rdquo;</li>
<li>This is about being professional.</li>
<li>You need to be in charge, not the client</li>
<li>You don&rsquo;t know what&rsquo;s going on with the client - they may be taking out on you something going on with their personal life</li>
<li>&ldquo;Sometimes people are dicks&rdquo; :) need to blow off steam sometimes</li>
<li>&ldquo;People don&rsquo;t always read the fine print&rdquo; or even the large print. Or contracts. Rather than getting frustrated by this, we need to recognise that it&rsquo;s a thing and deal with it.

<ul>
<li>Don&rsquo;t just assume it&rsquo;s been read and absolve responsibility - you need to continuously reinforce things throughout a project</li>
</ul>
</li>
<li>&ldquo;You can&rsquo;t change people or their behaviour: you can only change your own&rdquo;</li>
<li>Audience question - how do you filter out clients who you shouldn&rsquo;t be working with

<ul>
<li>Answer - it&rsquo;s tricky. Ask a lot of questions</li>
</ul>
</li>
<li>Audience question - how much do you bend your rules when times are tough and you can&rsquo;t afford to turn work away

<ul>
<li>Really tricky. No good answer. Communicate a LOT. Let your clients know that you&rsquo;re needy: you&rsquo;ll need a lot from them - particularly availability for communication.</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCamp Europe 2014 Notes - 1.3: Styling the WordPress Admin]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-3-styling-the-wordpress-admin/"/>
    <updated>2014-09-27T09:32:55+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-3-styling-the-wordpress-admin</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2014.europe.wordcamp.org/">WordCamp Europe</a> in Sofia - taking rough notes on some of the talks</em></p>

<p>Konstantin Dankov <a href="http://2014.europe.wordcamp.org/session/konstantin-dankov/">http://2014.europe.wordcamp.org/session/konstantin-dankov/</a></p>

<p><img src="http://photos-a.ak.instagram.com/hphotos-ak-xfp1/1742413_291384914397664_162274686_n.jpg" alt="sketchnotes by @studionetting" /></p>

<p><em>Awesome sketchnotes by <a href="http://instagram.com/p/tcl0LKNkJp">@studionetting</a></em></p>

<ul>
<li><p>Why style the admin?</p>

<ul>
<li>make things simpler for the user</li>
<li>save time by optimising workflows - supporting power users - removing unnecessary steps: e.g. jump straight to a particular page.</li>
<li>Branding - sometimes larger organisations would like their own branding inside

<ul>
<li>Important to not go overboard! Use a little to do a lot.</li>
</ul>
</li>
</ul>
</li>
<li><p>Why NOT to do it</p>

<ul>
<li>There&rsquo;s a large cost to supporting it:

<ul>
<li>There&rsquo;s a lot of it!</li>
</ul>
</li>
<li>Clashes with plugin styles: can cause plugins to break</li>
</ul>
</li>
<li><p>Consider the experience of editors vs admins</p></li>
<li><p>Adding a custom post type</p>

<ul>
<li>Defaults (all overridable when registering the post type)

<ul>
<li>It goes to the bottom of the list</li>
<li>It has the same icon as other post</li>
</ul>
</li>
</ul>
</li>
<li><p>Using filters the order of menu items can be managed in a more coherent way: explicitly naming the order rather than using index numbers.</p></li>
<li><p>Preference: When the custom post type is specific to that project then this menu-modifying code should be in the theme, along with the post type itself: moving it out into a plugin just adds complexity.</p></li>
<li><p>Removing the dashboard to jump straight to the posts: useful if your primary thing is generating new content</p></li>
<li><p>There&rsquo;s a lot of complexity in the WP admin css: responsive styles, Right->Left styles. Making modifications are a lot more work than they look</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCamp Europe 2014 Notes - 1.2: Why Sometimes Happiness Requires Effort: Depression in IT]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-2-why-sometimes-happiness-requires-effort-depression-in-it/"/>
    <updated>2014-09-27T08:27:35+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-2-why-sometimes-happiness-requires-effort-depression-in-it</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2014.europe.wordcamp.org/">WordCamp Europe</a> in Sofia - taking rough notes on some of the talks</em></p>

<p>Yana Petrova <a href="http://2014.europe.wordcamp.org/session/yana-petrova/">http://2014.europe.wordcamp.org/session/yana-petrova/</a></p>

<ul>
<li><p>Recipes for tackling depression</p>

<ul>
<li>Breathing exercises</li>
<li>Make lists of things you want to do - force yourself to pick something off the list and do it</li>
<li>Engineer opportunities for small wins</li>
<li>Learn how to listen: helps to realise realities - stops you getting stuck on false ideas bouncing around inside your own head</li>
</ul>
</li>
<li><p>Audience question - how do you convince the client that they&rsquo;re working with People who need to not be driven into the ground (and need time to sort things out properly? Squashing technical debt for happiness and satisifaction?)</p></li>
<li><p>Pedometer - gamifying being active - helps to break patterns of always working. An example of making a small win.</p></li>
<li><p>Audience question - keeping good mental health in the face of difficult clients</p></li>
<li><p>Audience recipes:</p>

<ul>
<li>Cycling - not just for the riding, but for meeting people</li>
<li>Yoga</li>
<li>Ringfence smartphone use</li>
<li>Remember - If you fail, nobody is going to die!!</li>
</ul>
</li>
<li><p>Closing comment: If something is really important it will come back to you. Don&rsquo;t stress about your inbox and don&rsquo;t check your email at 1pm.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[WordCamp Europe 2014 Notes - 1.1: Beyond the Code]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-1-beyond-the-code/"/>
    <updated>2014-09-27T08:03:07+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/09/27/wordcamp-europe-2014-notes-1-beyond-the-code</id>
    <content type="html"><![CDATA[<p><em>I&rsquo;m at <a href="http://2014.europe.wordcamp.org/">WordCamp Europe</a> in Sofia - taking rough notes on some of the talks</em></p>

<h2>Noel Tock: Beyond the code</h2>

<p><a href="http://2014.europe.wordcamp.org/session/noel-tock/">http://2014.europe.wordcamp.org/session/noel-tock/</a>
9:30</p>

<p><img src="http://photos-a.ak.instagram.com/hphotos-ak-xpf1/1723763_309422682576104_171479899_n.jpg" alt="sketchnotes by @studionetting" /></p>

<p><em>Awesome sketchnotes by <a href="http://instagram.com/p/tcUpBuNkEl/">@studionetting</a></em></p>

<ul>
<li>Getting stuck in cycles of task completion - head down - &ldquo;daily execution&rdquo;.</li>
<li>This time next year wp will be 1/5 of the internet.</li>
<li>Freelancers, professionals - will be unable to keep up with the rate of demand</li>
<li>Most WP shops: 1-2 years - achieve saturation: then it&rsquo;s head down - spending time in github, hipchat etc.</li>
<li>Coming out of a conference inspired, but 2 days later, back in the grind</li>
<li>Write down the things you&rsquo;re interested in: Taking an inventory</li>
<li>What&rsquo;s important for your self development?</li>
<li>Point at which you see an article isn&rsquo;t often the point at which you&rsquo;re able to read it - soln: instapaper etc.</li>
<li><p>Task consolodation. Trello board columns:</p>

<ul>
<li>future: Interested but not ready to commit time</li>
<li>Am prepared to invest time</li>
<li>Working on now</li>
<li>This week - stuff that&rsquo;s been done</li>
</ul>
</li>
<li><p>&lsquo;Epics&rsquo; - Executing on one significant big-picture thing a day</p></li>
<li><p>Rescuetime - tracks time on computer: categorises activities e.g. code, reading</p>

<ul>
<li>Assign a productivity value to different kinds of activity</li>
<li>Redefine this in order to gameify optimising the headline productivity value</li>
</ul>
</li>
<li><p>Summary: being reactive vs actively pursuing opportunities and ideas</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating Postgres Data From an Old Rails Project to a New One]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/08/20/migrating-postgres-data-from-an-old-rails-project-to-a-new-one/"/>
    <updated>2014-08-20T23:29:31+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/08/20/migrating-postgres-data-from-an-old-rails-project-to-a-new-one</id>
    <content type="html"><![CDATA[<p>TL;DR - this was my approach:</p>

<ol>
<li>create migrations on the old project to transform the data into the new schema structure</li>
<li>run these migrations on a dump of the live database</li>
<li>dump just the data of the tables you care about from the migrated database with pg_dump</li>
<li>import this dump into the new database with psql</li>
</ol>


<p>Once I worked through a few kinks, it was all remarkably straightforward.</p>

<h2>Background</h2>

<ul>
<li><a href="https://github.com/dgmstuart/Swing-Out-London">Swing Out London</a> is a cms for managing swing events</li>
<li>I&rsquo;m rebuilding it from scratch as <a href="https://github.com/dgmstuart/swingoutlondon2">a totally new project</a></li>
<li>In particular the <a href="https://github.com/dgmstuart/Swing-Out-London/blob/274f64e1d635bcd8d2678eb6a0dfa50516ef64ba/db/schema.rb">old data model</a> was insane and the <a href="https://github.com/dgmstuart/swingoutlondon2/blob/daa4397f1e9d772a5b5302cdd369b81201c8ec84/db/schema.rb">new one</a>  is turning out much cleaner</li>
<li>The current live system is Rails 3 and hosted on Heroku - so uses postgres for the live database, but uses sqlite for the development database</li>
<li>The new system is Rails 4 and uses postgres for the development database</li>
</ul>


<p>I want to be able to import data from the current live site into my work-in-progress new schema as I go along, for a few reasons:</p>

<ol>
<li>Doing the migration incrementally will hopefully be easier than doing it all in one go at the end</li>
<li>Working with real data will help me make better design decisions earlier</li>
<li>Being able to see what is missing between the old and new schemas will help to make sure I don&rsquo;t miss anything</li>
</ol>


<h2>The challenge</h2>

<p>Data which in the old app exists in one god object (<code>event</code>) needs to be divided between three tables in the new app (<code>events</code>, <code>event_seeds</code>, <code>event_generators</code>).</p>

<p>In particular, in the new app, events with individual dates are modelled by having:</p>

<ul>
<li>an <code>event_generator</code> with a date, which belongs to&hellip;</li>
<li>an <code>event_seed</code> (which holds the main data) and belongs to&hellip;</li>
<li>an <code>event</code> which groups <code>event_seed</code>s together.</li>
</ul>


<p>In the old app, dates are stored in a <code>swing_dates</code> table (which has unique entries)
and associated with <code>events</code> via a join table: <code>event_swing_dates</code> <em>(Don&rsquo;t do this. If you can believe it, this was done in an attempt to speed up database queries)</em>.</p>

<p>The thought of transforming this data at the SQL level gives me a headache. Fortunately in the old app this complexity is hidden under the hood and events just have a <code>#dates</code> method which pulls out the relevant list. For the sake of sanity, my import solution needs to take advantage of that method - hence doing the transformation at the application level using migrations.</p>

<h2>Step 0: Convert the old app to use postgres</h2>

<p>I had never gotten around to updating the old app to use posgres in development, so the first step was to sort that out. Luckily this is pretty easy:</p>

<ol>
<li>In the <code>Gemfile</code>, remove the <code>sqlite3</code> gem and move the <code>pg</code> gem out of the production group.</li>
<li>In <code>database.yml</code>, change the sqlite config to a posgres config</li>
</ol>


<h2>Step 1: Create migrations</h2>

<p>I used a number of migrations to do the data transformation. Since some of them are irreversible, there&rsquo;s no real reason to separate them out, other than organising the code:</p>

<h3>ChangeVenuesToNewFormat</h3>

<p>The venues table isn&rsquo;t changing much so this just involved renaming a column, adding some not-null constraints (probably not necessary) and dropping the columns which aren&rsquo;t being imported yet (<a href="https://github.com/dgmstuart/Swing-Out-London/blob/01df37393444e4d3e217c870d6b3164e001288f0/db/migrate/20140820003740_change_venues_to_new_format.rb">source</a>)</p>

<h3>CreateNewEventsTables</h3>

<p>This involved copying the section of the schema in the new app which creates the tables for the <code>event_seeds</code> and <code>event_generators</code> tables. This way the tables are exactly the same as the new schema. (<a href="https://github.com/dgmstuart/Swing-Out-London/blob/9069b2d1b4103b781a7b3e9951317c40c1d3fb2b/db/migrate/20140820082042_create_new_events_tables.rb">source</a>)</p>

<h3>MoveDataToNewEventTables</h3>

<p>This is where the gnarly stuff happens. First I need a way of putting data into the new tables. I could go and create full models in the app, but it&rsquo;s possible to just create lightweight classes right in the migration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">EventSeed</span> <span class="o">&lt;</span>  <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:event</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:venue</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="k">class</span> <span class="nc">EventGenerator</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:event_seed</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>I guess I should maybe also have included all of the validations here, but I&rsquo;m fairly confident that the validations are basically equivalent between the two apps, and in any case, the relevant fields have <code>null: false</code> constraints on them in the database, so I&rsquo;m not going to sweat it.</p>

<p>Now we can actually create the new records:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">change</span>
</span><span class='line'>  <span class="no">Event</span><span class="o">.</span><span class="n">all</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">event</span><span class="o">|</span>
</span><span class='line'>    <span class="n">event_seed</span> <span class="o">=</span> <span class="n">create_event_seed</span><span class="p">(</span><span class="n">event</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="n">event</span><span class="o">.</span><span class="n">frequency</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>      <span class="n">start_date</span> <span class="o">=</span> <span class="n">event</span><span class="o">.</span><span class="n">first_date</span> <span class="o">||</span> <span class="no">Date</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">2001</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">create_event_generator</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">start_date</span><span class="p">,</span> <span class="n">event</span><span class="p">,</span> <span class="n">event_seed</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">event</span><span class="o">.</span><span class="n">dates</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">date</span><span class="o">|</span>
</span><span class='line'>        <span class="n">create_event_generator</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">date</span><span class="p">,</span> <span class="n">event</span><span class="p">,</span> <span class="n">event_seed</span><span class="p">)</span> <span class="k">if</span> <span class="n">date</span> <span class="o">&gt;</span> <span class="no">Date</span><span class="o">.</span><span class="n">today</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># ...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note the use of <code>event.dates</code>.</p>

<p><code>create_event_seed</code> and <code>create_event_generator</code> are just wrappers around
<code>EventGenerator.create</code> and <code>EventSeed.create</code> for convenience.</p>

<p>This migration also dropped most of the fields on <code>events</code> but kept the original ids intact - I have a feeling that will turn out to be useful later on. (<a href="https://github.com/dgmstuart/Swing-Out-London/blob/01df37393444e4d3e217c870d6b3164e001288f0/db/migrate/20140820082444_move_data_to_new_event_tables.rb">source</a>)</p>

<h3>CreateNonMigrationTables and DropUnusedTables</h3>

<p>These migrations create the remaining missing tables (like Users, which we&rsquo;re not going to import data into) and drop the tables which don&rsquo;t yet have any counterpart in the new app. (<a href="https://github.com/dgmstuart/Swing-Out-London/blob/01df37393444e4d3e217c870d6b3164e001288f0/db/migrate/20140820210352_create_non_migration_tables.rb">source 1</a>, <a href="https://github.com/dgmstuart/Swing-Out-London/blob/01df37393444e4d3e217c870d6b3164e001288f0/db/migrate/20140820210653_drop_unused_tables.rb">source 2</a>)</p>

<p>Given that in the end I only migrated data from specific tables, this probably wasn&rsquo;t necessary, but it&rsquo;s handy to be able to verify that the schemas between the old and new app exactly match, and to see what hasn&rsquo;t been migrated yet.</p>

<h2>Step 2: Run the migrations on the live database</h2>

<p>So we&rsquo;ve now got a set of migrations which convert the old schema into the latest version of the new schema. Time to test it out on some real data.</p>

<p>Getting a database dump from heroku is easy. You first need to drop the existing development database with <code>dbdrop soldn1_dev</code> and then you can create a new one as a copy of the live database. For me that looks like this:</p>

<pre><code>heroku pg:pull HEROKU_POSTGRESQL_GRAY soldn1_dev
</code></pre>

<p>Then it&rsquo;s just a case of <code>rake db:migrate</code> and cross your fingers. If it&rsquo;s successful then the <code>schema.rb</code> files should match between the old and new app (perhaps modulo some indexes).</p>

<h2>Step 3: Dump the data</h2>

<p>So now we&rsquo;ve got our data into the form we want it, how do we actually move it into the new database?</p>

<p>Dumping the whole database would mean we&rsquo;d carry over the <code>schema_migrations</code> table as well. <code>schema_migrations</code> consists of a list of identifiers which match up to an app&rsquo;s migration files - it&rsquo;s what Rails uses to track which migrations have been run, which is important for e.g. <code>rake db</code> commands, so we don&rsquo;t want to modify it.</p>

<p>The simplest approach seems to be to dump only the tables which actually contain data which we want to migrate:</p>

<pre><code>pg_dump soldn1_dev -a -t event_generators -t event_seeds -t events -t venues &gt; dump
</code></pre>

<p><code>pg_dump</code> actually writes to <code>stdout</code>, so that <code>&gt; dump</code> creates a file from the output.</p>

<p>The <code>-a</code> flag tells <code>pg_dump</code> to dump only the data. Although we&rsquo;ve engineered a state where the migrations on the old site and the new site both result in the same schema, it seems cleaner to only move across the data rather than recreating the tables.</p>

<h2>Step 4: Import the data</h2>

<p>If there are any records already in the relevant tables with IDs which would clash with data in the import then this would need to be resolved somehow before importing. I don&rsquo;t care about any existing data, so I&rsquo;m happy to resolve it by clearing out any existing records with <code>rake db:reset</code>.</p>

<p>To load the data from the dump file:</p>

<pre><code>psql soldn2_dev &lt; dump
</code></pre>

<p>And that&rsquo;s it: the data is now in the new database. Job done.</p>

<p><em>Thanks to <a href="https://twitter.com/zeeraw">@zeeraw</a> for the suggestion to use Rails migrations</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a New App on Heroku Really Is Stupidly Easy]]></title>
    <link href="http://dgmstuart.github.io/blog/2014/08/15/creating-a-new-app-on-heroku-is-stupidly-easy/"/>
    <updated>2014-08-15T13:49:11+01:00</updated>
    <id>http://dgmstuart.github.io/blog/2014/08/15/creating-a-new-app-on-heroku-is-stupidly-easy</id>
    <content type="html"><![CDATA[<pre><code>heroku apps:create swingoutlondon2 --region eu
git push heroku master
heroku run rake db:migrate
</code></pre>

<p>Done *. <a href="https://swingoutlondon2.herokuapp.com">https://swingoutlondon2.herokuapp.com</a> exists.</p>

<p>I know it&rsquo;s been around for ages, but it really is amazing how simple it is.</p>

<p><em>* Actually not quite done - I still needed to:</em></p>

<ul>
<li><em>set up my <a href="https://devcenter.heroku.com/changelog-items/426">secret tokens</a></em></li>
<li><em>jump through a couple of hoops to get Devise&rsquo;s key to be recognised because <a href="https://stackoverflow.com/questions/19832218/failing-to-find-envsecret-key-in-devise-setup-on-heroku#comment35154876_19833145">Heroku doesn&rsquo;t have access to the Rails environment when deploying</a></em></li>
<li><em><a href="http://stackoverflow.com/a/17082720/1035431">tweak my production.rb</a> to get it to compile assets</em></li>
</ul>


<p><em>But whatever. Hush.</em></p>
]]></content>
  </entry>
  
</feed>
