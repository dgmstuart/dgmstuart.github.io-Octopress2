<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | dgms code]]></title>
  <link href="http://dgmstuart.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://dgmstuart.github.io/"/>
  <updated>2015-03-22T12:16:38+00:00</updated>
  <id>http://dgmstuart.github.io/</id>
  <author>
    <name><![CDATA[Duncan Stuart]]></name>
    <email><![CDATA[dgmstuart@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Managing Identity in Git]]></title>
    <link href="http://dgmstuart.github.io/blog/2015/02/04/managing-identity-in-git/"/>
    <updated>2015-02-04T00:17:21+00:00</updated>
    <id>http://dgmstuart.github.io/blog/2015/02/04/managing-identity-in-git</id>
    <content type="html"><![CDATA[<p>When using git, your commits are labelled with your name and email address.
These are usually based on the <code>user.name</code> and <code>user.email</code> fields in a global <code>.gitconfig</code> file in your home directory,
ensuring that these values are always available.</p>

<p>There might be some circumstances under which these need to vary. For example, on public projects for work I like to use my work email rather than my personal one.
There are a couple of ways to achieve this:</p>

<h3>1. As an argument to the commit:</h3>

<pre><code>git commit user.email duncan@work.com
</code></pre>

<p>This is useful for one-off commits but would be tedious to type every time.</p>

<h3>2. In a local git config</h3>

<pre><code>git config user.email duncan@work.com
</code></pre>

<p>This creates a local <code>.gitconfig</code> file. Useful in project directories - since all child directories will use settings in this file,
or will fall back to the global settings if a setting isn&rsquo;t present in this file.</p>

<h3>3. In an environment variable</h3>

<pre><code>export AUTHOR_EMAIL=duncan@work.com
export COMMITTER_EMAIL=duncan@work.com
</code></pre>

<p>These override everything - any email setting in any <code>.gitconfig</code> file.
Useful if like me you like to <a href="https://github.com/dgmstuart/dotfiles">manage your dotfiles in git</a>
and share them on github in order to easily copy settings between different computers.</p>

<p>These could be set in a local <code>.profile</code> file to make every project on that computer use a different email to your main one, while keeping the <code>.gitconfig</code> file pristine.
<em>To understand the difference between Author and Committer see <a href="https://stackoverflow.com/questions/18750808/difference-between-author-and-committer-in-git/18754896#18754896">this StackOverflow post</a></em></p>

<h2>Bonus: What if you don&rsquo;t set anything?</h2>

<p>It turns out git will try it&rsquo;s best to find a name and email address to associate with your commits even if you don&rsquo;t tell it explicitly what these are.
Here&rsquo;s where it looks, in order, for an email address to use:</p>

<ol>
<li>An <code>EMAIL</code> local variable</li>
<li>Your system username <code>@</code> the value in <code>/etc/mailname</code> (which only exists on Debian systems?)</li>
<li>Your system username <code>@</code> the fully qualified hostname of the computer</li>
</ol>


<p>For more information check out the <a href="http://git-scm.com/docs/git-commit-tree.html">git documentation on the topic</a></p>

<p><em>Thanks to <a href="https://twitter.com/holizz">@holizz</a> for helping me understand all this</em></p>
]]></content>
  </entry>
  
</feed>
